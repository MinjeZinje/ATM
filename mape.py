import pandas as pd

# Recreate the table as a DataFrame
data_dict = {
    "ATM ID": ["Z0241002"] * 6 + ["Z0951001"] * 6 + ["Z1031001"] * 6 + ["Z1119001"] * 6 + ["Z1899001"] * 6,
    "Feature Set": ["F0", "F1", "F2", "F3", "F4", "F5"] * 5,
    "Best Ridge Alpha": [500, 50, 50, 50, 10, 1, 10, 50, 10, 10, 10, 10, 100, 50, 50, 50, 10, 1, 500, 100, 50, 10, 1, 1, 200, 50, 10, 10, 10, 1],
    "MAE (Train/Test)": [
        "55955.66 / 55441.46", "53616.51 / 54005.08", "51332.57 / 51705.83", "52773.51 / 52221.01", "45783.71 / 56978.66", "10027.43 / 15213.06",
        "39620.72 / 35856.27", "37549.20 / 34045.38", "32543.69 / 27969.72", "34718.68 / 30919.22", "28736.48 / 27351.02", "10937.08 / 10014.69",
        "26967.71 / 24623.74", "25989.47 / 23064.46", "24847.58 / 21413.14", "25647.81 / 22755.00", "20650.19 / 19294.31", "5038.71 / 6051.56",
        "64345.78 / 64085.47", "63278.03 / 64963.92", "60867.44 / 62126.61", "60152.39 / 62393.86", "35358.24 / 41750.12", "11408.60 / 11259.50",
        "36077.63 / 31379.38", "33932.93 / 29761.63", "30705.23 / 27448.65", "32157.53 / 28274.84", "24353.96 / 20075.71", "8194.23 / 6869.07"
    ],
    "RMSE (Train/Test)": [
        "69953.49 / 70258.14", "67914.23 / 67794.88", "64700.69 / 65119.95", "66697.59 / 65954.44", "59487.85 / 73943.39", "15162.81 / 25042.19",
        "48237.19 / 42403.22", "45721.71 / 41941.90", "40660.81 / 35140.53", "43184.19 / 38603.58", "36649.91 / 34381.90", "16936.82 / 16107.97",
        "35358.76 / 31414.34", "33944.28 / 31121.59", "32609.77 / 29595.25", "33387.82 / 30647.76", "28263.85 / 29205.52", "7693.54 / 11552.57",
        "77934.80 / 78213.09", "76691.66 / 77102.74", "73744.28 / 73435.23", "73034.39 / 74226.06", "47353.29 / 52586.96", "15313.10 / 15015.96",
        "46233.86 / 38548.74", "44188.22 / 38080.23", "40903.71 / 35839.56", "42729.35 / 36853.87", "33369.85 / 26961.19", "12453.94 / 9193.99"
    ]
}

# Convert to DataFrame
df = pd.DataFrame(data_dict)

# Extract test MAE values and compute MAPE
def compute_mape(mae_str):
    train, test = map(float, mae_str.split(" / "))
    return (test / train) * 100 if train != 0 else float('inf')

df["MAPE (%)"] = df["MAE (Train/Test)"].apply(compute_mape)

# Save to CSV or Print
df.to_csv("ridge_results_with_mape.csv", index=False)  # Save the updated table
print(df)  # Print the updated table

print("Updated results saved to 'ridge_results_with_mape.csv'.")
